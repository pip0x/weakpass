{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, computed } from 'vue';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let hashes = ref([]);\n    let revealed = ref([]);\n    let isProcessing = ref(false);\n    let content = ref(\"\");\n    const activeTab = ref('found'); // Default to 'found' tab\n    const setActiveTab = tab => {\n      activeTab.value = tab;\n    };\n    const reversedRevealed = computed(() => {\n      return [...revealed.value].reverse();\n    });\n    const filteredRows = computed(() => {\n      if (activeTab.value === 'found') {\n        return reversedRevealed.value.filter(item => item.match !== false);\n      } else {\n        return reversedRevealed.value.filter(item => item.match === false);\n      }\n    });\n    const strictCount = computed(() => {\n      return revealed.value.filter(item => item.match === \"strict\").length;\n    });\n    const partialCount = computed(() => {\n      return revealed.value.filter(item => item.match === \"partial\").length;\n    });\n    const lastCount = computed(() => {\n      return revealed.value.filter(item => item.match === \"last\").length;\n    });\n    const noMatchCount = computed(() => {\n      return revealed.value.filter(item => item.match === false).length;\n    });\n    const cleanUp = async () => {\n      hashes.value.forEach(hash => {\n        revealed.value.push({\n          hash: hash,\n          pass: false,\n          type: false,\n          match: false\n        });\n      });\n      hashes.value = [];\n      content.value = \"\";\n    };\n    const buildHashDB = async () => {\n      let explodedArray = content.value.split(/[\\n\\s:;]+/);\n      explodedArray = explodedArray.filter(item => item.trim() !== \"\");\n      hashes.value = [...new Set(explodedArray)];\n    };\n    const fullMatch = async (results, hashtype) => {\n      let matchedHashes = [];\n      hashes.value.forEach(hash => {\n        results.flat().forEach(item => {\n          if (item.hash == hash.toLowerCase()) {\n            revealed.value.push({\n              hash: item.hash,\n              pass: item.pass,\n              type: hashtype,\n              match: \"strict\"\n            });\n            matchedHashes.push(hash.toLowerCase());\n          }\n        });\n      });\n      hashes.value = hashes.value.filter(h => !matchedHashes.includes(h.toLowerCase()));\n    };\n    const partialMatch = async (results, hashtype) => {\n      let matchedHashes = [];\n      hashes.value.forEach(hash => {\n        results.flat().forEach(item => {\n          if (item.hash.length - hash.length < item.hash.length / 2) {\n            if (item.hash.startsWith(hash.toLowerCase())) {\n              revealed.value.push({\n                hash: item.hash,\n                pass: item.pass,\n                type: hashtype,\n                match: \"partial\",\n                original: hash\n              });\n              matchedHashes.push(hash.toLowerCase());\n            }\n          }\n        });\n      });\n      hashes.value = hashes.value.filter(h => !matchedHashes.includes(h.toLowerCase()));\n    };\n    const lastBytes = async (results, hashtype) => {\n      let matchedHashes = [];\n      hashes.value.forEach(hash => {\n        let entry = hash.slice(0, -2);\n        results.flat().forEach(item => {\n          if (item.hash.length - entry.length < item.hash.length / 2) {\n            if (item.hash.startsWith(entry.toLowerCase())) {\n              revealed.value.push({\n                hash: item.hash,\n                pass: item.pass,\n                type: hashtype,\n                match: \"last\",\n                original: hash\n              });\n              matchedHashes.push(hash.toLowerCase());\n            }\n          }\n        });\n      });\n      hashes.value = hashes.value.filter(h => !matchedHashes.includes(h.toLowerCase()));\n    };\n    const parseResults = async (results, hashtype) => {\n      await fullMatch(results, hashtype);\n      await partialMatch(results, hashtype);\n      await lastBytes(results, hashtype);\n    };\n    const handleLookupSHA256 = async () => {\n      let processedLines = new Set();\n      hashes.value.forEach(line => {\n        if (line.length >= 60 && line.length <= 64 && /^[0-9a-fA-F]+$/i.test(line)) {\n          processedLines.add(line.substring(0, 6));\n        }\n      });\n      const fetchData = async hash => {\n        const response = await fetch(`https://weakpass.com/api/v1/range/${hash}.json?type=sha256`);\n        return response.json();\n      };\n\n      // Loop through the processed lines and fetch & parse results one by one\n      for (let hash of processedLines) {\n        try {\n          let data = await fetchData(hash);\n          await parseResults([data], \"sha256\");\n        } catch (error) {\n          console.error(`Error fetching data for hash ${hash}:`, error);\n        }\n      }\n    };\n    const handleLookupSHA1 = async () => {\n      let processedLines = new Set();\n      hashes.value.forEach(line => {\n        if (line.length >= 38 && line.length <= 40 && /^[0-9a-fA-F]+$/i.test(line)) {\n          processedLines.add(line.substring(0, 6));\n        }\n      });\n      const fetchData = async hash => {\n        const response = await fetch(`https://weakpass.com/api/v1/range/${hash}.json?type=sha1`);\n        return response.json();\n      };\n      for (let hash of processedLines) {\n        try {\n          let data = await fetchData(hash);\n          await parseResults([data], \"sha1\");\n        } catch (error) {\n          console.error(`Error fetching data for hash ${hash}:`, error);\n        }\n      }\n    };\n    const handleLookupMD5 = async () => {\n      let processedLines = new Set();\n      hashes.value.forEach(line => {\n        if (line.length >= 30 && line.length <= 32 && /^[0-9a-fA-F]+$/i.test(line)) {\n          processedLines.add(line.substring(0, 6));\n        }\n      });\n      const fetchData = async hash => {\n        const response = await fetch(`https://weakpass.com/api/v1/range/${hash}.json?type=md5`);\n        return response.json();\n      };\n      for (let hash of processedLines) {\n        try {\n          console.log(hash);\n          let data = await fetchData(hash);\n          await parseResults([data], \"md5\");\n        } catch (error) {\n          console.error(`Error fetching data for hash ${hash}:`, error);\n        }\n      }\n    };\n    const handleLookupNTLM = async () => {\n      let processedLines = new Set();\n      hashes.value.forEach(line => {\n        if (line.length >= 30 && line.length <= 32 && /^[0-9a-fA-F]+$/i.test(line)) {\n          processedLines.add(line.substring(0, 6));\n        }\n      });\n      const fetchData = async hash => {\n        const response = await fetch(`https://weakpass.com/api/v1/range/${hash}.json?type=ntlm`);\n        return response.json();\n      };\n      for (let hash of processedLines) {\n        try {\n          let data = await fetchData(hash);\n          await parseResults([data], \"ntlm\");\n        } catch (error) {\n          console.error(`Error fetching data for hash ${hash}:`, error);\n        }\n      }\n    };\n    const handleLookup = async () => {\n      isProcessing.value = true;\n      await buildHashDB();\n      try {\n        await handleLookupMD5();\n      } catch (error) {\n        console.error(\"Error during MD5 lookup:\", error);\n      }\n      try {\n        await handleLookupNTLM();\n      } catch (error) {\n        console.error(\"Error during NTLM lookup:\", error);\n      }\n      try {\n        await handleLookupSHA1();\n      } catch (error) {\n        console.error(\"Error during SHA1 lookup:\", error);\n      }\n      try {\n        await handleLookupSHA256();\n      } catch (error) {\n        console.error(\"Error during SHA256 lookup:\", error);\n      }\n      try {\n        await cleanUp();\n      } catch (error) {\n        console.error(\"Cleanup failed:\", error);\n      }\n      isProcessing.value = false;\n    };\n    const generateFullCSV = () => {\n      const csvContent = generateCSVContent([['Hash', 'Match', 'Type', 'Password'],\n      // Header row\n      ...revealed.value.map(item => [item.hash, item.match !== false ? item.match : 'no match', item.type, item.pass])]);\n      downloadCSV(csvContent, 'all_hashes.csv');\n    };\n    const generateFilteredCSV = () => {\n      const csvContent = generateCSVContent([['Hash', 'Match', 'Type', 'Password'], ...revealed.value.filter(item => item.match !== false).map(item => [item.hash, item.match, item.type, item.pass])]);\n      downloadCSV(csvContent, 'found_hashes.csv');\n    };\n    const generateCSVContent = rows => {\n      return rows.map(row => row.join(',')).join('\\n');\n    };\n    const downloadCSV = (csvContent, filename) => {\n      const blob = new Blob([csvContent], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      const link = document.createElement('a');\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', filename);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    };\n    const __returned__ = {\n      get hashes() {\n        return hashes;\n      },\n      set hashes(v) {\n        hashes = v;\n      },\n      get revealed() {\n        return revealed;\n      },\n      set revealed(v) {\n        revealed = v;\n      },\n      get isProcessing() {\n        return isProcessing;\n      },\n      set isProcessing(v) {\n        isProcessing = v;\n      },\n      get content() {\n        return content;\n      },\n      set content(v) {\n        content = v;\n      },\n      activeTab,\n      setActiveTab,\n      reversedRevealed,\n      filteredRows,\n      strictCount,\n      partialCount,\n      lastCount,\n      noMatchCount,\n      cleanUp,\n      buildHashDB,\n      fullMatch,\n      partialMatch,\n      lastBytes,\n      parseResults,\n      handleLookupSHA256,\n      handleLookupSHA1,\n      handleLookupMD5,\n      handleLookupNTLM,\n      handleLookup,\n      generateFullCSV,\n      generateFilteredCSV,\n      generateCSVContent,\n      downloadCSV,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","hashes","revealed","isProcessing","content","activeTab","setActiveTab","tab","value","reversedRevealed","reverse","filteredRows","filter","item","match","strictCount","length","partialCount","lastCount","noMatchCount","cleanUp","forEach","hash","push","pass","type","buildHashDB","explodedArray","split","trim","Set","fullMatch","results","hashtype","matchedHashes","flat","toLowerCase","h","includes","partialMatch","startsWith","original","lastBytes","entry","slice","parseResults","handleLookupSHA256","processedLines","line","test","add","substring","fetchData","response","fetch","json","data","error","console","handleLookupSHA1","handleLookupMD5","log","handleLookupNTLM","handleLookup","generateFullCSV","csvContent","generateCSVContent","map","downloadCSV","generateFilteredCSV","rows","row","join","filename","blob","Blob","link","document","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild"],"sources":["/root/weakpass/lookup/src/App.vue"],"sourcesContent":["<script setup>\nimport { ref, computed } from 'vue';\n\n\nlet hashes = ref([]);\nlet revealed = ref([]);\nlet isProcessing = ref(false);\nlet content = ref(\"\");\nconst activeTab = ref('found');  // Default to 'found' tab\nconst setActiveTab = (tab) => {\n  activeTab.value = tab;\n};\nconst reversedRevealed = computed(() => {\n  return [...revealed.value].reverse();\n});\n\n\nconst filteredRows = computed(() => {\n  if (activeTab.value === 'found') {\n\n    return reversedRevealed.value.filter(item => item.match !== false);\n  } else {\n\n    return reversedRevealed.value.filter(item => item.match === false);\n  }\n});\n\n\n\n\nconst strictCount = computed(() => {\n  return revealed.value.filter(item => item.match === \"strict\").length;\n});\n\n\nconst partialCount = computed(() => {\n  return revealed.value.filter(item => item.match === \"partial\").length;\n});\n\n\nconst lastCount = computed(() => {\n  return revealed.value.filter(item => item.match === \"last\").length;\n});\nconst noMatchCount = computed(() => {\n  return revealed.value.filter(item => item.match === false).length;\n});\n\n\nconst cleanUp = async() =>{\n  hashes.value.forEach(hash => {\n\n    revealed.value.push({hash: hash,pass: false,type:false,match:false});\n});\nhashes.value=[];\ncontent.value=\"\";\n\n}\n\n\nconst buildHashDB = async () => {\n  let explodedArray = content.value.split(/[\\n\\s:;]+/);\n  explodedArray = explodedArray.filter(item => item.trim() !== \"\");\n  hashes.value=[...new Set(explodedArray)];\n\n};\n\n\n\nconst fullMatch= async (results,hashtype) => {\n\nlet matchedHashes = [];\nhashes.value.forEach(hash => {\n  results.flat().forEach(item => {\n\n      if(item.hash==hash.toLowerCase())\n      {\n        revealed.value.push({hash: item.hash,pass: item.pass,type:hashtype,match:\"strict\"});\n        matchedHashes.push(hash.toLowerCase());\n      }\n\n  });\n});\nhashes.value = hashes.value.filter(h => !matchedHashes.includes(h.toLowerCase()));\n\n\n};\n\nconst partialMatch= async (results,hashtype) => {\n\nlet matchedHashes = [];\nhashes.value.forEach(hash => {\n  results.flat().forEach(item => {\n\n   if(item.hash.length-hash.length<item.hash.length/2)\n    {\n      \n      if(item.hash.startsWith(hash.toLowerCase()))\n        {\n          revealed.value.push({hash: item.hash,pass: item.pass,type:hashtype,match:\"partial\",original:hash});\n          matchedHashes.push(hash.toLowerCase());\n        }\n\n    }\n\n  });\n});\nhashes.value = hashes.value.filter(h => !matchedHashes.includes(h.toLowerCase()));\n\n\n};\n\nconst lastBytes= async (results,hashtype) => {\n\nlet matchedHashes = [];\nhashes.value.forEach(hash => {\n  let entry=hash.slice(0, -2);\n\n  results.flat().forEach(item => {\n\n   if(item.hash.length-entry.length<item.hash.length/2)\n    {\n      \n      if(item.hash.startsWith(entry.toLowerCase()))\n        {\n          revealed.value.push({hash: item.hash,pass: item.pass,type:hashtype,match:\"last\",original:hash});\n          matchedHashes.push(hash.toLowerCase());\n        }\n\n    }\n\n  });\n});\nhashes.value = hashes.value.filter(h => !matchedHashes.includes(h.toLowerCase()));\n\n\n};\n\n\nconst parseResults= async (results,hashtype) => {\n  \n\nawait fullMatch(results,hashtype);\nawait partialMatch(results,hashtype);\nawait lastBytes(results,hashtype);\n}\n\nconst handleLookupSHA256 = async () => {\n\n  let processedLines = new Set ();\n\n  hashes.value.forEach((line) => {\n   \n    if (line.length >= 60 &&  line.length <= 64 && /^[0-9a-fA-F]+$/i.test(line)) {\n      processedLines.add(line.substring(0, 6));\n    }\n  });\n\n  const fetchData = async (hash) => {\n    const response = await fetch(`https://weakpass.com/api/v1/range/${hash}.json?type=sha256`);\n    return response.json();\n  };\n\n  // Loop through the processed lines and fetch & parse results one by one\n  for (let hash of processedLines) {\n    try {\n      let data = await fetchData(hash); \n     await parseResults([data], \"sha256\");\n    } catch (error) {\n      console.error(`Error fetching data for hash ${hash}:`, error);\n    }\n  }\n};\n\n\n\nconst handleLookupSHA1 = async () => {\n  let processedLines = new Set ();\n\n  hashes.value.forEach((line) => {\n   \n    if (line.length >= 38 && line.length <= 40 && /^[0-9a-fA-F]+$/i.test(line)) {\n      processedLines.add(line.substring(0, 6));\n    }\n  });\n\n  const fetchData = async (hash) => {\n    const response = await fetch(`https://weakpass.com/api/v1/range/${hash}.json?type=sha1`);\n    return response.json();\n  };\n\n  for (let hash of processedLines) {\n    try {\n      let data = await fetchData(hash); \n     await parseResults([data], \"sha1\");\n    } catch (error) {\n      console.error(`Error fetching data for hash ${hash}:`, error);\n    }\n  }\n};\n\n\n\nconst handleLookupMD5 = async () => {\n  let processedLines = new Set ();\n  \n  hashes.value.forEach((line) => {\n   \n    if (line.length >= 30 &&  line.length <= 32 && /^[0-9a-fA-F]+$/i.test(line)) {\n      processedLines.add(line.substring(0, 6));\n    }\n  });\n\n  const fetchData = async (hash) => {\n    const response = await fetch(`https://weakpass.com/api/v1/range/${hash}.json?type=md5`);\n    return response.json();\n  };\n\n\n  for (let hash of processedLines) {\n    try {\n      console.log(hash);\n      let data = await fetchData(hash); \n     await parseResults([data], \"md5\");\n    } catch (error) {\n      console.error(`Error fetching data for hash ${hash}:`, error);\n    }\n  }\n};\n\n\nconst handleLookupNTLM = async () => {\n  let processedLines = new Set ();\n\n  hashes.value.forEach((line) => {\n   \n    if (line.length >= 30 &&   line.length <= 32 && /^[0-9a-fA-F]+$/i.test(line)) {\n      processedLines.add(line.substring(0, 6));\n    }\n  });\n\n  const fetchData = async (hash) => {\n    const response = await fetch(`https://weakpass.com/api/v1/range/${hash}.json?type=ntlm`);\n    return response.json();\n  };\n\n\n  for (let hash of processedLines) {\n    try {\n      let data = await fetchData(hash); \n     await parseResults([data], \"ntlm\");\n    } catch (error) {\n      console.error(`Error fetching data for hash ${hash}:`, error);\n    }\n  }\n};\n\n\n\n\nconst handleLookup = async () => {\n  isProcessing.value=true;\n\n\n  await buildHashDB();\n\n\n\n  try {\n    await handleLookupMD5();\n  } catch (error) {\n    console.error(\"Error during MD5 lookup:\", error);\n  }\n\n  try {\n  await handleLookupNTLM();\n  }\n  catch (error) {\n    console.error(\"Error during NTLM lookup:\", error);\n  }\n  try {\n  await handleLookupSHA1();  \n}\n  catch (error) {\n    console.error(\"Error during SHA1 lookup:\", error);\n  }\n  try {\n  await handleLookupSHA256();  \n}\n  catch (error) {\n    console.error(\"Error during SHA256 lookup:\", error);\n  }\n\n\n  try {\n  await cleanUp();  \n}\n  catch (error) {\n    console.error(\"Cleanup failed:\", error);\n  }\n\n  isProcessing.value=false;\n};\n\n\n\nconst generateFullCSV = () => {\n  const csvContent = generateCSVContent([\n    ['Hash', 'Match','Type','Password'], // Header row\n    ...revealed.value.map(item => [\n      item.hash,\n      item.match !== false ? item.match : 'no match',\n      item.type,\n      item.pass\n\n    ])\n  ]);\n\n  downloadCSV(csvContent, 'all_hashes.csv');\n};\n\n\nconst generateFilteredCSV = () => {\n  const csvContent = generateCSVContent([\n    ['Hash', 'Match',  'Type','Password'], \n    ...revealed.value\n      .filter(item => item.match !== false)\n      .map(item => [\n        item.hash,\n        item.match,\n        \n        item.type,\n        item.pass,\n      ])\n  ]);\n\n  downloadCSV(csvContent, 'found_hashes.csv');\n};\n\n\nconst generateCSVContent = (rows) => {\n  return rows.map(row => row.join(',')).join('\\n');\n};\n\n\nconst downloadCSV = (csvContent, filename) => {\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n  const link = document.createElement('a');\n  const url = URL.createObjectURL(blob);\n  link.setAttribute('href', url);\n  link.setAttribute('download', filename);\n  link.style.visibility = 'hidden';\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n</script>\n\n\n\n<template>\n\n\n\n\n<section class=\"section\">\n    <div class=\"container is-box\">\n      <div class=\"columns is-multiline is-align-items-center\">\n\n        <div class=\"column is-12 ml-auto\">\n            <h2 class=\"mb-5 is-size-1 is-size-3-mobile has-text-weight-bold\">Password lookup</h2>\n            <h2 class=\"subtitle\">Reveal password for MD5, NTLM, SHA1 or SHA256 hash <Link :href=\"route('static.precomputed_tables')\">with precomputed weakpass4.merged.txt</Link> without sending it to the backend</h2>\n        </div>\n\n        <div class=\"column is-12 ml-auto\">\n            <form @submit.prevent=\"handleLookup\">\n            <div class=\"field\">\n  <div class=\"control\">\n    <textarea class=\"textarea\"   \n    placeholder=\"bef58f652fddb1c20ecbfdb7cf31d932\nOne hash per line\"  rows=\"7\" v-model=\"content\"></textarea>\n  </div>\n</div>\n   \n  <div class=\"field\">\n  <div class=\"control\">\n    <button type=\"submit\" class=\"button is-link\" :disabled=\"isProcessing\">\n\n<span v-if=\"isProcessing\" class=\"icon\">\n  <i class=\"fas fa-spin fa-spinner\"></i>\n</span>\n\n<span v-if=\"!isProcessing\">\n  Search\n</span>\n\n\n\n</button>\n  </div>\n</div>\n</form>\n\n        </div>\n\n\n        <div class=\"column is-12\" v-if=\"revealed.length\">\n    <div class=\" px-0\">\n      <div>\n        <div class=\"mb-4 px-5 is-flex is-justify-content-space-between is-align-items-center\">\n          <h4 class=\"title mb-0 is-size-4 is-hidden-mobile \">Revealed hashes</h4>\n\n          <div class=\"field is-grouped\">\n  <div class=\"control\">\n    <button class=\"button is-link\" @click=\"generateFilteredCSV\" > \n      \n      <span class=\"icon-text\">\n\n        <span>Found ({{ strictCount+partialCount + lastCount }})</span>\n        <span class=\"icon\">\n        <i class=\"fas fa-download\"></i>\n      </span>\n      </span>\n      \n      </button>\n  </div>\n  <div class=\"control\">\n    <button class=\"button is-link\" @click=\"generateFullCSV\"> \n      \n      <span class=\"icon-text\">\n\n        <span>All ({{ strictCount+partialCount + lastCount+noMatchCount }})</span>\n        <span class=\"icon\">\n        <i class=\"fas fa-download\"></i>\n      </span>\n      </span>\n      \n      </button>\n  </div>\n</div>\n        </div>\n\n        <div class=\"tabs\">\n          <ul class=\"px-5\">\n            <li :class=\"{ 'is-active': activeTab === 'found' }\"><a class=\"is-size-6 px-3 pb-2\" :style=\"{'border-bottom: solid 2px;':activeTab === 'found'}\"   @click=\"setActiveTab('found')\">Found {{ strictCount+partialCount + lastCount }}</a></li>\n            <li :class=\"{ 'is-active': activeTab === 'unknown' }\"><a class=\"is-size-6 px-3 pb-2\" :style=\"{'border-bottom: solid 2px;':activeTab === 'found'}\"   @click=\"setActiveTab('unknown')\">Unknown {{ noMatchCount }}</a></li>\n          </ul>\n        </div>\n\n\n      </div>\n      <div>\n        <div class=\"mb-4 is-justify-content-space-between is-align-items-center\">\n      <div class=\"table-container\">\n        <table class=\"table is-fullwidth mt-3\">\n          <thead>\n            <tr>\n              <th >Hash</th>\n              <th v-if=\"activeTab==='found'\">Password</th>\n              <th v-if=\"activeTab==='found'\">Type  </th>\n\n            </tr>\n          </thead>\n          <tbody>\n            <tr  v-for=\"(item, index) in filteredRows\" :key=\"index\">\n              <td             \n            :class=\"{\n            'is-primary': item.match === 'strict',\n            'is-success': item.match === 'partial' || item.match === 'last',\n            'is-warning': item.match !== 'strict' && item.match !== 'partial' && item.match !== 'last'\n          }\">\n\n                {{ item.hash }}\n              </td>\n              <td v-if=\"activeTab==='found'\"><span v-if=\"item.match!=false\">{{ item.pass }}</span></td>\n              <td v-if=\"activeTab==='found'\"><span v-if=\"item.match!=false\">{{ item.type }}</span></td>\n\n            </tr>\n\n\n\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n    </div>\n  </div>\n\n\n\n\n        <div class=\"column is-12 is-12-desktop ml-auto\">\n          <div>\n\n            <div class=\"mb-4 is-flex\">\n              <div>\n                <p class=\"has-text-grey-dark\">With hash lookup, you can find passwords for hashes like <strong>MD5</strong>, <strong>NTLM</strong>, <strong>SHA1</strong>, and <strong>SHA256</strong>. It uses a <Link :href=\"route('static.precomputed_tables')\">precomputed weakpass4.merged.txt</Link> as database. You can search through an <strong>unlimited number</strong> of hashes at once.</p>\n              </div>\n            </div>\n            <div class=\"mb-4 is-flex\">\n              <div>\n\n                <p class=\"has-text-grey-dark\"><strong>Your hash will not be send to the backend</strong>, all checks are done client-side. Want to know more? Check our <Link :href=\"route('static.api')\">API section</Link>!</p>\n              </div>\n            </div>\n            <div class=\"is-flex\">\n              <div>\n\n                <p class=\"has-text-grey-dark\">What build same functionality inhouse? Here you can find <Link :href=\"route('static.precomputed_tables')\">precalculated tables</Link> for every need.</p>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n\n\n\n\n\n    \n    <br/>\n\n</section>\n\n\n</template>\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}